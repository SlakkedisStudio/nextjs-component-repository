import { NextPageWithLayout } from './_app';
import SEOHead from '../components/SEOHead';
import Image from 'next/image';
import styles from './index.module.scss';
import { useDispatch, useSelector } from 'react-redux';
import { RootState } from '../store/store';
import { useAppSelector, useInterval, useAppDispatch } from '../hooks';
import { selectLoading, setLoading } from '../store/example';
import { useGetPokemonByNameQuery } from '../services/pokemon';
import Layout from '../layouts/default';
import { useStyles } from '@/hooks/useStyles';
import fs from 'fs';

import {
  Box,
  Divider,
  Drawer,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  Toolbar,
  Typography
} from '@mui/material';
import InboxIcon from '@mui/icons-material/MoveToInbox';
import MailIcon from '@mui/icons-material/Mail';
import dynamic from 'next/dynamic';
import { useEffect, useState } from 'react';
import Button from '@/components/component-repository/button';
import NavBar from '@/components/component-repository/navbar';
const Home: NextPageWithLayout = () => {
  const { data, error, isLoading } = useGetPokemonByNameQuery('staryu');
  const s = useStyles(styles);
  const loading = useAppSelector(selectLoading);
  const dispatch = useAppDispatch();
  const drawerWidth = 250;

  const componentList = [
    {
      component: Button,
      name: 'Button'
    },
    {
      component: NavBar,
      name: 'Navbar'
    }
  ];

  const [currentComponent, setCurrentComponent] = useState(componentList[0]);

  return (
    <div className={styles.container}>
      <SEOHead>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </SEOHead>

      <main className={s('main')}>
        <Drawer
          sx={{
            width: drawerWidth,
            flexShrink: 0,
            '& .MuiDrawer-paper': {
              width: drawerWidth,
              boxSizing: 'border-box'
            }
          }}
          variant="permanent"
          anchor="left"
        >
          <h3 className={`title xs ${s('components-title')}`}>Components</h3>
          <Divider />
          <List>
            {componentList.map((component, index) => (
              <ListItem
                onClick={() => {
                  setCurrentComponent(component);
                }}
                key={component.name}
                disablePadding
              >
                <ListItemButton>
                  <ListItemText primary={component.name} />
                </ListItemButton>
              </ListItem>
            ))}
          </List>
          <Divider />
        </Drawer>

        <Box className={s('component-preview-box')}>
          {(() => {
            // const props = currentComponent.props;
            return <currentComponent.component>
            </currentComponent.component>;
          })()}
        </Box>
      </main>

      <footer className={s('footer')}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={s('logo')}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

// layouts are added like this via the getLayout function, the Layout is returned
// this structure allows for react to be aware of state and properly perform state updates
Home.getLayout = function getLayout(page) {
  return <Layout>{page}</Layout>;
};

export default Home;
